name: test-and-deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/react-docker-ci-cd:latest
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Timestamp
        uses: gerred/actions/current-time@master
        id: current-time
        
      - name: Run String Replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_EBS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_EBS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Generate Deployment Package
        run: zip -r deploy.zip Dockerrun.aws.json

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_EBS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_EBS_SECRET_ACCESS_KEY }}
          application_name: react-docker-ci-cd
          environment_name: React-docker-ci-cd-env
          version_label: "Sample"
          region: us-east-1
          deployment_package: deploy.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          EB_APP_NAME=react-docker-ci-cd
          EB_ENV_NAME=React-docker-ci-cd-env
          VERSION_LABEL=deploy-$(date +%Y%m%d%H%M%S)

          # Create a new application version
          aws elasticbeanstalk create-application-version --application-name $EB_APP_NAME --version-label $VERSION_LABEL --source-bundle S3Bucket=$EB_APP_NAME, S3Key=deploy.zip

          # Update the environment to use the new application version
          aws elasticbeanstalk update-environment --environment-name $EB_ENV_NAME --version-label $VERSION_LABEL
